# description	: Linux lts kernel, sources and modules (based on Slackware huge kernel and aufs support patched)
# depends	: elfutils

name=linux-lts
version=4.14.58
release=2
options=(!strip)
_aufs_commit=47363d98235b9ce06bfebd7e0742e14f56f548a3
source=(https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-$version.tar.xz
	aufs4-20180726.tar.gz::https://github.com/sfjro/aufs4-standalone/archive/47363d98235b9ce06bfebd7e0742e14f56f548a3.tar.gz
	config)
md5sum=(f8c9c683a90fb281e9126a8d157d57ef
	b9101068996ed14a9754ec2799393468
	141165b690c830986a457e0f62ca7818)

build() {
	cd linux-$version

	# aufs4 patch
	cp -r $SRC/aufs4-standalone-${_aufs_commit}/{Documentation,fs} .
	cp $SRC/aufs4-standalone-${_aufs_commit}/include/uapi/linux/aufs_type.h include/uapi/linux/
	patch -Np1 -i $SRC/aufs4-standalone-${_aufs_commit}/aufs4-kbuild.patch
	patch -Np1 -i $SRC/aufs4-standalone-${_aufs_commit}/aufs4-base.patch
	patch -Np1 -i $SRC/aufs4-standalone-${_aufs_commit}/aufs4-mmap.patch
	#patch -Np1 -i $SRC/aufs4-standalone-${_aufs_commit}/aufs4-standalone.patch   # if plan to compile aufs as modules

	kernver=${version}$(grep CONFIG_LOCALVERSION= $SRC/config | cut -d '"' -f2)

	make mrproper
	cp $SRC/config ./.config
	#make menuconfig
	make bzImage modules
	make INSTALL_MOD_PATH=$PKG modules_install

	mkdir -p $PKG/boot

	cp  System.map $PKG/boot/System.map-$kernver
	cp  .config $PKG/boot/config-$kernver
	cp  arch/x86/boot/bzImage $PKG/boot/vmlinuz-$kernver

	make clean
	make prepare

	rm -rf $PKG/lib/firmware

	for file in $(ls arch); do
		case $file in
			x86|Kconfig) continue ;;
			*) rm -fr arch/$file ;;
		esac
	done

	# strip down sources
	# don't package the kernel in the sources directory
	find . -name "*Image" -exec rm "{}" \;
	find . -name "*.cmd" -exec rm -f "{}" \; 
	rm -f .*.d

	rm -fr firmware ipc .config.old .version .cocciconfig \
		.get_maintainer.ignore .gitattributes .gitignore .mailmap \
		COPYING CREDITS MAINTAINERS README Documentation
	find . -name ".gitignore" -exec rm "{}" \;
	for dir in block certs crypto drivers fs init kernel lib mm net samples security sound usr virt; do
		find $dir -type f \( -name "*.c" -o -name "*.h" \) -exec rm "{}" \;
	done
	for i in $(ls tools); do
		[ "$i" = "objtool" ] || rm -fr tools/$i
	done
	for i in $(ls tools/objtool); do
		[ "$i" = "objtool" ] || rm -fr tools/objtool/$i
	done

	rm $PKG/lib/modules/$kernver/{build,source}
	mv $SRC/linux-$version $PKG/lib/modules/$kernver/build
	ln -sv build $PKG/lib/modules/$kernver/source
}
