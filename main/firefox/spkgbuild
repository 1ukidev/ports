# description	: Stand-alone browser based on the Mozilla codebase
# depends	: alsa-lib autoconf2.13 cbindgen clang dav1d dbus-glib ffmpeg gtk3 hicolor-icon-theme icu libevent libffi libjpeg-turbo libnotify libpng libvpx libxrender libxcomposite libsm libxt libxdamage libxscrnsaver libwebp lld nasm nodejs nspr nss perl pixman pkgconf python3 rust yasm unzip zip zlib

name=firefox
version=114.0.1
release=1
source="$name-$version.tar.xz::https://archive.mozilla.org/pub/firefox/releases/$version/source/firefox-$version.source.tar.xz 
	$name.desktop"

build() {
	cd $name-$version
	mkdir "$SRC/rust"
	export CARGO_HOME="$SRC/rust"

cat <<- EOF > .mozconfig
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-shared
unset MOZ_TELEMETRY_REPORTING
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --with-system-jpeg
ac_add_options --with-system-zlib
ac_add_options --with-system-png
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-webp
ac_add_options --without-wasm-sandboxed-libraries
ac_add_options --enable-audio-backends=alsa
ac_add_options --enable-av1
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman
ac_add_options --enable-optimize
ac_add_options --enable-release
ac_add_options --enable-rust-simd
ac_add_options --enable-sandbox
ac_add_options --disable-debug-symbols
ac_add_options --enable-official-branding
ac_add_options --with-distribution-id=org.venomlinux
ac_add_options --enable-linker=lld
ac_add_options --enable-lto=thin
ac_add_options --disable-tests
ac_add_options --disable-debug-symbols
ac_add_options --disable-updater
ac_add_options --disable-crashreporter
ac_add_options --disable-necko-wifi
ac_add_options --disable-parental-controls
ac_add_options --disable-elf-hack
EOF

	# Audio
	scratch isinstalled alsa-lib && echo 'ac_add_options --enable-alsa' >> .mozconfig
	scratch isinstalled jack && echo 'ac_add_options --enable-jack' >> .mozconfig
	scratch isinstalled pulseaudio && echo 'ac_add_options --enable-pulseaudio' >> .mozconfig

	scratch isinstalled wayland-protocols && \
		echo 'ac_add_options --enable-default-toolkit=cairo-gtk3-wayland' >> .mozconfig || \
		echo 'ac_add_options --enable-default-toolkit=cairo-gtk3' >> .mozconfig

	scratch isinstalled ccache && echo 'ac_add_options --enable-ccache' >> .mozconfig

	export CC=clang CXX=clang++ AR=llvm-ar NM=llvm-nm RANLIB=llvm-ranlib RUSTFLAGS="-C opt-level=2 $RUSTFLAGS"
	export MOZBUILD_STATE_PATH="$SRC"/mozbuild

	# Disable notification when build system has finished
	export MOZ_NOSPAM=1

	# Use system's Python environment
	export PIP_NETWORK_INSTALL_RESTRICTED_VIRTUALENVS=mach
	export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=pip
	mkdir $SRC/bin
	ln -s /usr/bin/pip3 $SRC/bin/pip
	ln -s /usr/bin/python3 $SRC/bin/python
	export PATH="$SRC/bin:$PATH"

	# python/mach/mach/mixin/process.py fails to detect SHELL
	export SHELL='/usr/bin/sh'

	./mach build
	DESTDIR=$PKG ./mach install

	unset MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE MOZBUILD_STATE_PATH

  local vendorjs="$PKG/usr/lib/$name/browser/defaults/preferences/vendor.js"
  install -Dvm644 /dev/stdin "$vendorjs" <<END
pref("intl.locale.requested", "");
pref("browser.shell.checkDefaultBrowser", false);
pref("extensions.autoDisableScopes", 11);
END

  local distini="$PKG/usr/lib/$name/distribution/distribution.ini"
  install -Dvm644 /dev/stdin "$distini" <<END
[Global]
id=venomlinux
version=$version
about=Mozilla Firefox for Venom Linux
[Preferences]
app.distributor=venomlinux
app.distributor.channel=$name
app.partner.venomlinux=venomlinux
END

	# Add icons
	for i in 16 22 24 32 48 64 128 256; do
	install -Dm644 browser/branding/official/default$i.png \
		$PKG/usr/share/icons/hicolor/${i}x${i}/apps/$name.png
	done

	install -Dm644 $SRC/$name.desktop \
		$PKG/usr/share/applications/$name.desktop

	# Remove crap
	rm -r $PKG/usr/lib/firefox/browser/features
	rm $PKG/usr/lib/firefox/removed-files

	# Exclude library for revdep.
	install -d $PKG/etc/revdep.d
	echo "/usr/lib/firefox/" > $PKG/etc/revdep.d/$name.conf
}
