#!/bin/sh
#
# system info for nyx
# based on ufetch script
#

host="$(hostname)"
os="Nyx GNU/Linux"
kernel="$(uname -r)"
uptime="$(uptime -p | sed 's/up //')"
packages="$(ls /var/lib/scratchpkg/index/*/.pkginfo | wc -l)"
shell="$(basename ${SHELL})"

if [ -z "${WM}" ]; then
	if [ "${XDG_CURRENT_DESKTOP}" ]; then
		envtype='DE'
		WM="${XDG_CURRENT_DESKTOP}"
	elif [ "${DESKTOP_SESSION}" ]; then
		envtype='DE'
		WM="${DESKTOP_SESSION}"
	else
		envtype='WM'
		WM="$(tail -n 1 "${HOME}/.xinitrc" | cut -d ' ' -f 2)"
	fi
else
	envtype='WM'
fi

# define colors
bold="$(tput bold)"
black="$(tput setaf 0)"
red="$(tput setaf 1)"
green="$(tput setaf 2)"
yellow="$(tput setaf 3)"
blue="$(tput setaf 4)"
magenta="$(tput setaf 5)"
cyan="$(tput setaf 6)"
white="$(tput setaf 7)"
reset="$(tput sgr0)"

# colors
c1="${reset}${black}"
c2="${reset}${red}"
c3="${reset}${green}"
c4="${reset}${yellow}"
c5="${reset}${blue}"
c6="${reset}${magenta}"
c7="${reset}${cyan}"
c8="${reset}${white}"

# output
cat <<EOF

      ${c2})
   ${c2}( /(               ${c3}OS:       ${c7}${os}${reset}
   ${c2})\())(       )     ${c3}Kernel:   ${c7}${kernel}${reset}
  ${c2}((_)\ )\ ) ( /(     ${c3}Hostname: ${c7}${HOSTNAME}${reset}
   ${c7}_${c2}((${c7}_${c2}|()/( )\())    ${c3}Uptime:   ${c7}${uptime}${reset}
  ${c7}| \| |${c2})(${c7}_${c2})|(${c7}_${c2})\     ${c3}Shell:    ${c7}${shell}${reset}
  ${c7}| .\` | || \ \ /     ${c3}Packages: ${c7}${packages}${reset}
  ${c7}|_|\_|\_, /_\_\     ${c3}${envtype}:       ${c7}${WM}${reset}
        ${c7}|__/${reset}

EOF
