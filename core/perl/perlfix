#!/bin/bash
#
#  Copyright (c) 2019 by Emmett1  (emmett1.2miligrams@gmail.com)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#
#  script to detect broken perl modules after perl major update
#  need to use with 'scratchpkg'
#

perlpath=$(dirname $(perl -V:sitearch | grep -o "'.*'" | sed "s/'//g"))

get_perlmodules() {
	for i in $(dirname $perlpath)/*; do
		[ "$perlpath" = "$i" ] && continue	
		pkg=$(scratch own $i/$ | awk '{print $1}')
	done
}

sort_perlmodules() {
	for all in $(pkgdeplist -l -i $pkg | cut -d ' ' -f2); do
		for r in $pkg; do
			if [ $r = $all ]; then
				if [ -z "$order" ]; then
					order="$all"
				else
					order="$order $all"
				fi
				break
			fi
		done
	done
}

confirm() {
	read -r -p "$1 (Y/n) " response
	case "$response" in
		[Nn][Oo]|[Nn]) echo "$2"; exit 2 ;;
		*) : ;;
	esac
}

usage() {
	cat << EOF
Usage:
  $(basename $0) [options]
  
Options:
  -r     rebuild & reinstall broken package
  -y     dont ask user confirmation to rebuild package (use with -r)
  -h     print this help message

EOF
}

parse_opt() {
	while [ "$1" ]; do
		case $1 in
			-r) REBUILD=1 ;;
			-y) YES=1 ;;
			-h) usage; exit 0 ;;
			*)  echo "Invalid option ($1)"; exit 1 ;;
		esac
		shift
	done
}

parse_opt $@

if [ "$REBUILD" ] && [ "$UID" != 0 ]; then
	echo "Rebuild broken perl modules required root!"
	exit 1
fi

get_perlmodules

if [ "$pkg" ]; then
	sort_perlmodules
else
	echo "No broken perl modules found."
	exit 0
fi

if [ "$REBUILD" = 1 ]; then
	if [ "$YES" = "" ]; then
		echo
		echo "Package will be rebuild & reinstall by this order:"
		echo " $order"
		echo
		confirm "Continue rebuild & reinstall broken perl modules?" "Operation cancelled."
	fi
	for p in $order; do
		scratch build -f $p && scratch install -r $p || exit 1
	done
else
	echo "Broken perl modules:"
	for p in $order; do
		echo " $p"
	done
fi

exit 0
