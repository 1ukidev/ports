# description	: Collection of modular and reusable compiler and toolchain technologies
# depends	: cmake libffi python2 ninja libxml2

name=llvm
version=10.0.0
release=1
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/clang-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/compiler-rt-$version.src.tar.xz
	llvm-config.h
	0001-add-musl-triplets.patch"

build() {
	cd $name-$version.src

	export CC=gcc
	export CXX=g++

	mv ../clang-$version.src tools/clang
	mv ../compiler-rt-$version.src projects/compiler-rt

	case $XHOST in
		*-musl)
		        patch -Np1 -i $SRC/0001-add-musl-triplets.patch -d tools/clang

		        # Disable sanitizers
		        sed -i 's/set(COMPILER_RT_HAS_SANITIZER_COMMON TRUE)/set(COMPILER_RT_HAS_SANITIZER_COMMON FALSE)/' projects/compiler-rt/cmake/config-ix.cmake
		;;
	esac

	

	mkdir -v build
	cd       build
	
	cmake .. -G Ninja \
	      -DCMAKE_INSTALL_PREFIX=/usr           \
	      -DLLVM_ENABLE_FFI=ON                  \
	      -DCMAKE_BUILD_TYPE=Release            \
	      -DLLVM_BUILD_LLVM_DYLIB=ON            \
      	      -DLLVM_LINK_LLVM_DYLIB=ON             \
	      -DLLVM_ENABLE_RTTI=ON                 \
	      -DLLVM_TARGETS_TO_BUILD="X86;AMDGPU;BPF" \
	      -Wno-dev
	ninja
	DESTDIR=$PKG ninja install

	case $XHOST in
		*-musl) continue;;
		*)
		   mv $PKG/usr/include/llvm/Config/llvm-config.h \
		      $PKG/usr/include/llvm/Config/llvm-config-64.h
		   cp $SRC/llvm-config.h $PKG/usr/include/llvm/Config/llvm-config.h
		;;
	esac		        

	mkdir -p $PKG/usr/lib/llvm
	mv $PKG/usr/libexec/c++-analyzer \
	   $PKG/usr/libexec/ccc-analyzer \
	   $PKG/usr/lib/llvm
	rmdir $PKG/usr/libexec
	sed -i 's|libexec|lib/llvm|' $PKG/usr/bin/scan-build
}
