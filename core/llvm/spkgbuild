# description	: Collection of modular and reusable compiler and toolchain technologies
# depends	: cmake libffi python2 ninja

name=llvm
version=7.0.0
release=3
source=(http://llvm.org/releases/$version/$name-$version.src.tar.xz
	http://llvm.org/releases/$version/cfe-$version.src.tar.xz
	http://llvm.org/releases/$version/compiler-rt-$version.src.tar.xz
	llvm-config.h)
md5sum=(e0140354db83cdeb8668531b431398f0
	2ac5d8d78be681e31611c5e546e11174
	3b759c47076298363f4443395e0e51c1
	295c343dcd457dc534662f011d7cff1a)

build() {
	cd $name-$version.src

	export CC=gcc
	export CXX=g++

	mv ../cfe-$version.src tools/clang
	mv ../compiler-rt-$version.src projects/compiler-rt

	mkdir -v build
	cd       build
	
	cmake .. -G Ninja \
	      -DCMAKE_INSTALL_PREFIX=/usr           \
	      -DLLVM_ENABLE_FFI=ON                  \
	      -DCMAKE_BUILD_TYPE=Release            \
	      -DLLVM_BUILD_LLVM_DYLIB=ON            \
      	      -DLLVM_LINK_LLVM_DYLIB=ON             \
	      -DLLVM_TARGETS_TO_BUILD="X86;AMDGPU;BPF" \
	      -Wno-dev
	ninja
	DESTDIR=$PKG ninja install

	mv $PKG/usr/include/llvm/Config/llvm-config{,-64}.h
	cp $SRC/llvm-config.h $PKG/usr/include/llvm/Config/llvm-config.h

	mkdir -p $PKG/usr/lib/llvm
	mv $PKG/usr/libexec/{c++-analyzer,ccc-analyzer} $PKG/usr/lib/llvm
	rmdir $PKG/usr/libexec
	sed -i 's|libexec|lib/llvm|' $PKG/usr/bin/scan-build
}
